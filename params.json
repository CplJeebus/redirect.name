{"name":"redirect.name","tagline":"Configure domain redirects and URL forwarding with a simple DNS record","body":"## No sign-up required. Just add a DNS record.\r\n\r\nThis simple redirection service has no database backend, so there's no need to sign up for anything. Everything is configured by DNS. Just point your domain to the service, add a DNS record to configure your redirect(s), and you're good to go.\r\n\r\nHere's a live example redirecting [`github.redirect.name`](http://github.redirect.name) to this project's GitHub repo:\r\n\r\n```\r\ngithub  IN  A      107.170.45.49\r\ngithub  IN  TXT    \"redirect.name=https://github.com/holic/redirect.name\"\r\n```\r\n\r\n## Instructions\r\n\r\n1. Point your domain or subdomain to the redirection service. It is recommended that you use an `ALIAS` or `ANAME` record type if your DNS provider supports it. Otherwise, use a plain `A` record, keeping in mind that the IP address may change (or more may be added).\r\n  - `ALIAS` and `ANAME` records should point to `alias.redirect.name`\r\n  - `A` records should point to `107.170.45.49`\r\n2. Configure your redirect by adding a `TXT` record on the same hostname as the record above.\r\n  - Your `TXT` record value should have the format of `redirect.name=[path ]target[ code]`, where `target` is the target URL, `path` is an optional path to match on the hostname (defaults to any/all paths), and `code` is an optional status code for the redirect (defaults to `302`)\r\n\r\nYou can add more than one `TXT` record per hostname. The first path matched will be used for the redirect. Multiple `TXT` records for the same matched path result in a round-robin effect.\r\n\r\nWildcard matches (`*`) are also supported.\r\n\r\nAny unmatched paths will redirect to this documentation page, so it's recommended that you add a wildcard catch-all path when redirecting specific paths.\r\n\r\n## Examples\r\n\r\n`redirect.name=https://github.com/holic` redirects all paths on the hostname to `https://github.com/holic` with a `302` status code.\r\n\r\n`redirect.name=https://github.com/holic 301` redirects exactly as above, except with a `301` status code.\r\n\r\n`redirect.name=/github https://github.com/holic` redirects only the `/github` path on the hostname to the target URL.\r\n\r\n`redirect.name=/* https://github.com/holic/*` is a wildcard match that will redirect to the target URL, replacing the wildcards with the matched value.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}